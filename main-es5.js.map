{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/dashboard/dashboard.component.ts","webpack:///src/app/core/dashboard/dashboard.component.html","webpack:///src/app/core/detail-list/detail-list.component.ts","webpack:///src/app/core/detail-list/detail-list.component.html","webpack:///src/app/shared/components/modal/confirmation-modal/confirmation-modal.component.ts","webpack:///src/app/shared/components/modal/confirmation-modal/confirmation-modal.component.html","webpack:///src/app/shared/modules/material/material.module.ts","webpack:///src/app/shared/services/modal-service/modal.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","modalService","title","tableData","openDialog","edit","callBackFn","formData","push","closeModal","$event","stopPropagation","addData","updatedListData","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","DashboardComponent","data","formGroup","projectName","required","checkIfNameExist","bind","completion","max","managerName","showLoader","showErrorMsg","isEdit","modalData","reset","markAllAsTouched","invalid","updateValueAndValidity","value","control","nameList","map","ele","includes","nameExist","error","get","errors","errorMsg","Object","forEach","err","getSiteDeatails","DetailListComponent","cdRef","columnDefs","field","cellRenderer","rowData","buttons","buttonName","editData","index","listData","findIndex","splice","gridApi","redrawRows","detectChanges","openConfirmationModal","emit","generateTableButtons","defaultColDef","sortable","filter","flex","resizable","change","divElement","document","createElement","style","display","button","btnElement","buttonClass","classList","add","split","innerHTML","color","padding","margin","fontSize","cursor","addEventListener","event","appendChild","params","api","onGridReady","ConfirmationModalComponent","executeFnAfterConfirmation","modules","MaterialModule","schemas","ModalService","dialog","modalRef","open","close","providedIn","environment","production","baseUrl","console"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule],\n})\nexport class AppRoutingModule {}\n","import { Component } from '@angular/core';\nimport { IFormData } from './shared/interface/IFormData';\nimport { ModalService } from './shared/services/modal-service/modal.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass'],\n})\nexport class AppComponent {\n  title = 'Dashboard';\n  tableData: IFormData[] = [];\n  constructor(private modalService: ModalService) {}\n  addData() {\n    this.modalService.openDialog({\n      edit: false,\n      callBackFn: (formData) => {\n        this.tableData.push(formData);\n        this.tableData = [...this.tableData];\n        this.modalService.closeModal();\n      },\n      tableData: this.tableData,\n    });\n  }\n  updatedListData(tableData: IFormData[]){\n    this.tableData=tableData;\n  }\n}\n","\n<div class=\"container\">\n  <div class=\"heading\">Construction detail dashboard</div>\n  <div class=\"list-container-with-button\">\n    <button\n    type=\"button\"\n    mat-raised-button\n    (click)=\"$event.stopPropagation(); addData()\"\n    >\n    <span class=\"button-name\">\n        {{ 'Add Deatails' }}\n    </span>\n    </button>\n\n    <div class=\"table-container\">\n    <app-detail-list [listData]=\"tableData\" (updatedListData)=\"updatedListData($event)\"></app-detail-list>\n    </div>\n  </div>\n\n</div>\n","import { MaterialModule } from './shared/modules/material/material.module';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AgGridModule } from 'ag-grid-angular';\nimport { DashboardComponent } from './core/dashboard/dashboard.component';\nimport { DetailListComponent } from './core/detail-list/detail-list.component';\nimport { ConfirmationModalComponent } from './shared/components/modal/confirmation-modal/confirmation-modal.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    DetailListComponent,\n    ConfirmationModalComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    MaterialModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    AgGridModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { IFormData } from 'src/app/shared/interface/IFormData';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.sass'],\n})\nexport class DashboardComponent implements OnInit {\n  formGroup = new FormGroup({\n    projectName: new FormControl('', [\n      Validators.required,\n      this.checkIfNameExist.bind(this),\n    ]),\n    completion: new FormControl('', [Validators.required, Validators.max(100)]),\n    managerName: new FormControl('', [Validators.required]),\n  });\n  showLoader: boolean = false;\n  showErrorMsg: boolean = false;\n  tableData: IFormData[] = [];\n  addData: (data) => {};\n  isEdit: boolean = false;\n  modalData: any;\n  constructor(@Inject(MAT_DIALOG_DATA) data) {\n    this.modalData = data;\n    this.addData = data.callBackFn;\n    this.isEdit = data.edit;\n    this.tableData = data.tableData;\n  }\n\n  ngOnInit(): void {\n    if (this.isEdit) {\n      this.formGroup.reset(this.modalData['formData']);\n    }\n  }\n  getSiteDeatails() {\n    this.formGroup.markAllAsTouched();\n    if(this.formGroup.invalid){\n      this.formGroup.updateValueAndValidity();\n      return\n    }\n    this.addData(this.formGroup.value);\n  }\n  checkIfNameExist(control: FormControl): { [key: string]: boolean } {\n    if (!this.tableData || this.isEdit) {\n      return null;\n    }\n    const nameList = this.tableData.map((ele) => ele.projectName);\n    if (nameList.includes(control.value)) {\n      return { nameExist: true };\n    } else {\n      return null;\n    }\n  }\n  getProjectNameValidator(): string {\n    if (!this.formGroup) {\n      return;\n    }\n    const error = this.formGroup.get('projectName').errors;\n    let errorMsg: string = '';\n    Object.keys(error).forEach((err) => {\n      if (err === 'required' && error[err]) {\n        errorMsg = 'Project name is required.';\n      } else if (err === 'nameExist' && error[err]) {\n        errorMsg = 'Project name already exist.';\n      }\n    });\n    return errorMsg;\n  }\n  getPercentageError() {\n    if (!this.formGroup) {\n      return;\n    }\n    const error = this.formGroup.get('completion').errors;\n    let errorMsg: string = '';\n    Object.keys(error).forEach((err) => {\n      if (err === 'required' && error[err]) {\n        errorMsg = 'Percentage is required.';\n      } else if (err === 'max' && error[err]) {\n        errorMsg = 'It should be less than 100.';\n      }\n    });\n    return errorMsg;\n  }\n}\n","<div class=\"page-container\">\n    <div class=\"form-container\">\n      <span class=\"text\">Cunstaruction Detail Dashboard</span>\n      <form action=\"\" [formGroup]=\"formGroup\">\n        <div class=\"project-name-conrainer\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Enter  Project Name</mat-label>\n            <input matInput type=\"text\" placeholder=\"Enter  Project Name\" [formControlName]=\"'projectName'\">\n            <mat-error *ngIf=\"formGroup.get('projectName').invalid\">{{getProjectNameValidator()}}</mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"percentage-conrainer\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Enter completion percentage</mat-label>\n            <input matInput type=\"number\" placeholder=\"Enter completion percentage\" [formControlName]=\"'completion'\">\n            <mat-error *ngIf=\"formGroup.get('completion').invalid\">{{getPercentageError()}}</mat-error>\n          </mat-form-field>\n        </div>\n        <div class=\"manager-name-conrainer\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Enter Manager Name</mat-label>\n            <input matInput type=\"text\" placeholder=\"Enter Manager Name\" [formControlName]=\"'managerName'\">\n            <mat-error *ngIf=\"formGroup.get('managerName').invalid\">{{'Manager name is required.'}}</mat-error>\n          </mat-form-field>\n        </div>\n      </form>\n      <button\n          type=\"button\"\n          mat-raised-button\n          (click)=\"$event.stopPropagation(); getSiteDeatails()\"\n      >\n          <span class=\"button-name\">\n              {{ 'Add Deatails' }}\n          </span>\n      </button>\n    </div>\n  </div>\n","import {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n} from '@angular/core';\nimport { ColDef, GridApi } from 'ag-grid-community';\nimport { IFormData } from 'src/app/shared/interface/IFormData';\nimport { ModalService } from './../../shared/services/modal-service/modal.service';\n\n@Component({\n  selector: 'app-detail-list',\n  templateUrl: './detail-list.component.html',\n  styleUrls: ['./detail-list.component.sass'],\n})\nexport class DetailListComponent implements OnInit, OnChanges {\n  @Input() listData;\n  @Output() updatedListData= new EventEmitter<any>()\n  columnDefs: ColDef[] = [\n    { field: 'projectName' },\n    { field: 'completion' },\n    { field: 'managerName' },\n    {\n      field: 'Action',\n      cellRenderer: (rowData) => {\n        const buttons = [];\n        buttons.push({\n          buttonName: 'Edit',\n          showLoader: true,\n          function: () => {\n            const editData = {\n              edit: true,\n              callBackFn: (data) => {\n                const index = this.listData.findIndex(\n                  (ele) => ele.projectName === rowData.data.projectName\n                );\n                if (index !== -1) {\n                  this.listData.splice(index, 1, data);\n                }\n                this.listData = [...this.listData];\n                this.gridApi.redrawRows();\n                this.cdRef.detectChanges();\n                this.modalService.closeModal();\n              },\n              formData: rowData.data,\n              tableData: this.listData,\n            };\n            this.modalService.openDialog(editData);\n          },\n        });\n        buttons.push({\n          buttonName: 'Delete',\n          showLoader: true,\n          function: () => {\n            this.modalService.openConfirmationModal(() => {\n              const index = this.listData.findIndex(\n                (ele) => ele.projectName === rowData.data.projectName\n              );\n              if (index !== -1) {\n                this.listData.splice(index, 1);\n              }\n              this.listData = [...this.listData];\n              this.updatedListData.emit(this.listData)\n              this.modalService.closeModal();\n            });\n          },\n        });\n        return this.generateTableButtons(buttons);\n      },\n    },\n  ];\n  tableData: IFormData[] = [];\n  defaultColDef: ColDef = {\n    sortable: true,\n    filter: true,\n    flex: 1,\n    resizable: true,\n  };\n  gridApi: GridApi;\n  constructor(\n    private modalService: ModalService,\n    private cdRef: ChangeDetectorRef\n  ) {}\n\n  ngOnInit(): void {}\n  ngOnChanges(change) {}\n  generateTableButtons(buttons) {\n    const divElement = document.createElement('div');\n    divElement.style.display = 'flex';\n    buttons.forEach((button) => {\n      const btnElement = document.createElement('div');\n      if (button.buttonClass) {\n        btnElement.classList.add(...button.buttonClass.split(' '));\n      }\n      btnElement.innerHTML = button.buttonName;\n      if (button.buttonName === 'Edit') {\n        btnElement.style.color = 'blue';\n      } else {\n        btnElement.style.color = 'red';\n      }\n      btnElement.style.padding = '4px';\n      btnElement.style.margin = '0 3px';\n      btnElement.style.fontSize = '0.75rem';\n      btnElement.style.cursor = 'pointer';\n      btnElement.addEventListener('click', (event) => {\n        event.stopPropagation();\n        button.function(button);\n      });\n      divElement.appendChild(btnElement);\n    });\n    return divElement;\n  }\n  onGridReady(params) {\n    this.gridApi = params.api;\n  }\n}\n","<div class=\"table-caontainer\">\n  <ag-grid-angular\n    style=\"width: 100%; height: 100%\"\n    class=\"ag-theme-balham\"\n    [columnDefs]=\"columnDefs\"\n    (gridReady)=\"onGridReady($event)\"\n    [defaultColDef]=\"defaultColDef\"\n    [rowData]=\"listData\"\n  ></ag-grid-angular>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ModalService } from './../../../services/modal-service/modal.service';\n\n@Component({\n  selector: 'app-confirmation-modal',\n  templateUrl: './confirmation-modal.component.html',\n  styleUrls: ['./confirmation-modal.component.sass'],\n})\nexport class ConfirmationModalComponent implements OnInit {\n  executeFnAfterConfirmation: () => {};\n  constructor(\n    @Inject(MAT_DIALOG_DATA) modalData,\n    public modalService: ModalService\n  ) {\n    this.executeFnAfterConfirmation = modalData;\n  }\n\n  ngOnInit(): void {}\n}\n","\n\n<div class=\"heading\">\n    <div class=\"modal-heading text-color\" ><h3 mat-dialog-title>Delete</h3></div>\n    <div class=\"close-modal clickable\" (click)=\"modalService.closeModal()\">\n      <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15\" height=\"15\" viewBox=\"0 0 15 15\">\n        <path id=\"Icon_metro-cross\" data-name=\"Icon metro-cross\" d=\"M17.434,13.979h0l-4.55-4.551,4.55-4.551h0a.47.47,0,0,0,0-.663l-2.15-2.15a.47.47,0,0,0-.663,0h0L10.071,6.616,5.52,2.065h0a.47.47,0,0,0-.663,0l-2.15,2.15a.47.47,0,0,0,0,.663h0L7.258,9.428,2.708,13.979h0a.47.47,0,0,0,0,.663l2.15,2.15a.47.47,0,0,0,.663,0h0l4.551-4.551,4.551,4.551h0a.47.47,0,0,0,.663,0l2.15-2.15a.47.47,0,0,0,0-.663Z\" transform=\"translate(-2.571 -1.928)\" fill=\"#303f60\"/>\n      </svg>\n    </div>\n  </div>\n  <br>\n  <mat-dialog-content>\n    <div class=\"container\">\n        <div class=\"message\">Are you sure you want to delete this data ?</div>\n        <button\n        type=\"button\"\n        mat-raised-button\n        (click)=\"$event.stopPropagation();executeFnAfterConfirmation()\"\n    >\n        <span class=\"button-name\">\n            {{ 'Delete' }}\n        </span>\n    </button>\n    </div>\n  </mat-dialog-content>\n","import { CUSTOM_ELEMENTS_SCHEMA, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDialogModule } from '@angular/material/dialog';\nconst modules = [\n  MatButtonModule,\n  MatInputModule,\n  MatFormFieldModule,\n  MatDialogModule,\n];\n\n@NgModule({\n  declarations: [],\n  imports: [CommonModule, ...modules],\n  exports: [...modules],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n})\nexport class MaterialModule {}\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\nimport { DashboardComponent } from 'src/app/core/dashboard/dashboard.component';\nimport { ConfirmationModalComponent } from './../../components/modal/confirmation-modal/confirmation-modal.component';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ModalService {\n  modalRef: MatDialogRef<any>;\n  constructor(private dialog: MatDialog) {}\n\n  openDialog(data) {\n    this.modalRef = this.dialog.open(DashboardComponent, {\n      data: data,\n    });\n  }\n  closeModal() {\n    this.modalRef.close();\n  }\n  openConfirmationModal(executeFnAfterConfirmation) {\n    this.modalRef = this.dialog.open(ConfirmationModalComponent, {\n      data: executeFnAfterConfirmation,\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'https://jobs-api.squareboat.info/api/v1/',\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic()\n  .bootstrapModule(AppModule)\n  .catch((err) => console.error(err));\n"]}